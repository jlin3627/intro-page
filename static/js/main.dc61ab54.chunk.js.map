{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Example","useState","count","setCount","text","useEffect","document","title","Button","variant","onClick","class","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAKA,SAASA,IACP,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBACA,GADA,UAC0BA,mBAAS,WAAnC,mBACA,GADA,UAC0BA,mBAAS,CAAC,CAAEG,KAAM,kBAA5C,6BAMA,OAJAC,qBAAU,WACRC,SAASC,MAAT,sBAAgCL,EAAhC,aAIE,gCACI,6CAAgBA,EAAhB,YACA,cAACM,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,kBAAMP,EAASD,EAAQ,IAFlC,SAGI,sBAAMS,MAAM,oBAAZ,mBAEJ,cAACH,EAAA,EAAD,CACIC,QAAQ,YACRC,QAAS,kBAAMP,EAASD,EAAQ,IAFpC,yBAmBKU,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACb,EAAD,SCxBOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,M","file":"static/js/main.dc61ab54.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport React from 'react';\nimport {Button} from '@material-ui/core';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n  const [age, setAge] = useState(42);\n  const [fruit, setFruit] = useState('banana');\n  const [todos, setTodos] = useState([{ text: 'Learn Hooks'}]);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n      <div>\n          <p>You clicked {count} times</p>\n          <Button\n            variant=\"contained\"\n            onClick={() => setCount(count + 1)}>\n              <span class=\"mdc-button__label\">Add</span>\n          </Button>\n          <Button\n              variant=\"contained\" \n              onClick={() => setCount(count - 1)}>\n              Subtract\n          </Button>\n      </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Example />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}